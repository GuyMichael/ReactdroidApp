apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
//        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //androidx
//    api 'androidx.appcompat:appcompat:1.1.0'
//    api 'androidx.core:core-ktx:1.2.0'
    api 'androidx.multidex:multidex:2.0.1'
    api 'androidx.legacy:legacy-support-v4:1.0.0'
    api 'androidx.constraintlayout:constraintlayout:2.0.4'
    api 'androidx.navigation:navigation-fragment-ktx:2.3.4'
    api 'androidx.navigation:navigation-ui-ktx:2.3.4'
    api 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    api 'androidx.navigation:navigation-fragment-ktx:2.3.4'
    api 'androidx.navigation:navigation-ui-ktx:2.3.4'

    //Reactdroid - includes com.github.GuyMichael.apromise, androidx.core:core-ktx, androidx.appcompat:appcompat, material
    api 'com.github.GuyMichael.reactdroid:reactdroid:0.1.86'

    //Networking - Retrofit
    api 'com.squareup.retrofit2:retrofit:2.9.0'
        //json parsing - moshi
    api 'com.squareup.moshi:moshi:1.11.0'
    api 'com.squareup.retrofit2:converter-moshi:2.9.0'
        //moshi codegen - auto generated adapters at compile time
    kapt("com.squareup.moshi:moshi-kotlin-codegen:1.11.0")
//    implementation 'com.squareup.moshi:moshi-kotlin:1.9.2'    //moshi - reflection adapter

    //picasso - load image by url
    api 'com.squareup.picasso:picasso:2.71828'

    //Objectbox - for lib module only. Used for DbLogic. App-module should also use, with kapt as well,
    // so that MyObjectBox will be auto-generated (on app level - which holds the actual @Entity models)
    implementation "io.objectbox:objectbox-android:$objectboxVersion"

    //ViewPager2
    implementation "androidx.viewpager2:viewpager2:1.0.0"
}








// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = 'com.guymichael.reactiveapp'
                artifactId = 'reactiveapp'
                version = '1.0'
            }
            // Creates a Maven publication called “debug”.
            debug(MavenPublication) {
                // Applies the component for the debug build variant.
                from components.debug

                groupId = 'com.guymichael.reactiveapp'
                artifactId = 'reactiveapp-debug'
                version = '1.0'
            }
        }
    }
}